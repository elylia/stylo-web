let list_prefix = [];
i = 0;
root.descendants().forEach(function (node) {
  let match = node.data.name?.[0].replace(/.*_/gm);
  if (list_prefix.includes[match]) {
  } else {
    list_prefix.push(match);
  }
});

const colors = [
  "#9e0142",
  "#d53e4f",
  "#f46d43",
  "#fdae61",
  "#fee08b",
  "#ffffbf",
  "#e6f598",
  "#abdda4",
  "#66c2a5",
  "#3288bd",
  "#5e4fa2",
];
const nodeEnter = node
  .enter()
  .append("g")
  .style("fill", function (d) {
    for (var i = 0; i < list_prefix.length; i++) {
      var obj = list_prefix[i];
      root.descendants().forEach(function (node) {
        if (obj == node.data.name?.[0]) {
          return colors[i];
        } else {
        }
      });
    }
  });
  
  .style("fill", function (d) {

    return d.data.name == "jp_daily_newsletter_mary_ann_parsons_1_1850"
      ? "red"
      : "blue";
  })
async function logJSONData() {
  //JSON-Daten einlesen
  const response = await fetch("tree_JSON.json");
  const jsonData = await response.json();
  const root = d3.hierarchy(jsonData);
}
