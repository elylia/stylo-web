expl.var = round(((pca.results$sdev^2) / sum(pca.results$sdev^2) * 100), 1)
PC1_lab = paste("PC1 (", expl.var[1], "%)", sep="")
PC2_lab = paste("PC2 (", expl.var[2], "%)", sep="")
xy.coord = pca.results$x[,1:2]
name <- rownames(data$table.with.all.freqs)
xy.coord <- cbind(xy.coord, name)
colnames(xy.coord) <- c("V1","V2","name")
xy.coord <- transform(xy.coord, V1 = as.numeric(V1))
xy.coord <- transform(xy.coord, V2 = as.numeric(V2))
xy.coord <- data.frame(xy.coord)
mfw <- rbind(mfw, i)
culling <- rbind(culling, j)
dataset <- rbind(dataset, list(xy.coord))
} }
library(stylo)
library(stats)
library(jsonlite)
library(stringr)
mfw <- c()
culling <- c()
dataset <- list()
for (i in seq(100, 300, by=100)){
for(j in seq(0, 50, by=10)){
data <- stylo(gui = FALSE,
distance.measure = "delta",
analysis.type  = "PCV",
analyzed.features = "w",
ngram.size = "1",
mfw.min= i,
mfw.max = i,
mfw.incr = 0,
culling.min = j,
culling.max = j,
culling.incr = 10,
delete.pronouns = FALSE,
preserve.case = FALSE,
sampling = "no.sampling",
sample.size = 10000,
number.of.samples = 1,
corpus.dir = "corpus",
write.pdf.file = "false")
pca.results = prcomp(data$table.with.all.freqs[,1:i])
expl.var = round(((pca.results$sdev^2) / sum(pca.results$sdev^2) * 100), 1)
PC1_lab = paste("PC1 (", expl.var[1], "%)", sep="")
PC2_lab = paste("PC2 (", expl.var[2], "%)", sep="")
xy.coord = pca.results$x[,1:2]
name <- rownames(data$table.with.all.freqs)
xy.coord <- cbind(xy.coord, name)
colnames(xy.coord) <- c("V1","V2","name")
xy.coord <- transform(xy.coord, V1 = as.numeric(V1))
xy.coord <- transform(xy.coord, V2 = as.numeric(V2))
xy.coord <- data.frame(xy.coord)
mfw <- rbind(mfw, i)
culling <- rbind(culling, j)
dataset <- rbind(dataset, list(xy.coord))
} }
library(stylo)
library(stats)
library(jsonlite)
library(stringr)
mfw <- c()
culling <- c()
dataset <- list()
for (i in seq(100, 300, by=100)){
for(j in seq(0, 50, by=10)){
data <- stylo(gui = FALSE,
distance.measure = "delta",
analysis.type  = "PCV",
analyzed.features = "w",
ngram.size = "1",
mfw.min= i,
mfw.max = i,
mfw.incr = 0,
culling.min = j,
culling.max = j,
culling.incr = 10,
delete.pronouns = FALSE,
preserve.case = FALSE,
sampling = "no.sampling",
sample.size = 10000,
number.of.samples = 1,
corpus.dir = "corpus",
write.pdf.file = "false")
pca.results = prcomp(data$table.with.all.freqs[,1:i], scale(TRUE))
expl.var = round(((pca.results$sdev^2) / sum(pca.results$sdev^2) * 100), 1)
PC1_lab = paste("PC1 (", expl.var[1], "%)", sep="")
PC2_lab = paste("PC2 (", expl.var[2], "%)", sep="")
xy.coord = pca.results$x[,1:2]
name <- rownames(data$table.with.all.freqs)
xy.coord <- cbind(xy.coord, name)
colnames(xy.coord) <- c("V1","V2","name")
xy.coord <- transform(xy.coord, V1 = as.numeric(V1))
xy.coord <- transform(xy.coord, V2 = as.numeric(V2))
xy.coord <- data.frame(xy.coord)
mfw <- rbind(mfw, i)
culling <- rbind(culling, j)
dataset <- rbind(dataset, list(xy.coord))
} }
library(stylo)
library(stats)
library(jsonlite)
library(stringr)
mfw <- c()
culling <- c()
dataset <- list()
for (i in seq(100, 300, by=100)){
for(j in seq(0, 50, by=10)){
data <- stylo(gui = FALSE,
distance.measure = "delta",
analysis.type  = "PCV",
analyzed.features = "w",
ngram.size = "1",
mfw.min= i,
mfw.max = i,
mfw.incr = 0,
culling.min = j,
culling.max = j,
culling.incr = 10,
delete.pronouns = FALSE,
preserve.case = FALSE,
sampling = "no.sampling",
sample.size = 10000,
number.of.samples = 1,
corpus.dir = "corpus",
write.pdf.file = "false")
pca.results = prcomp(data$table.with.all.freqs[,1:i], scale(TRUE))
expl.var = round(((pca.results$sdev^2) / sum(pca.results$sdev^2) * 100), 1)
PC1_lab = paste("PC1 (", expl.var[1], "%)", sep="")
PC2_lab = paste("PC2 (", expl.var[2], "%)", sep="")
xy.coord = pca.results$x[,1:2]
name <- rownames(data$table.with.all.freqs)
xy.coord <- cbind(xy.coord, name)
colnames(xy.coord) <- c("V1","V2","name")
xy.coord <- transform(xy.coord, V1 = as.numeric(V1))
xy.coord <- transform(xy.coord, V2 = as.numeric(V2))
xy.coord <- data.frame(xy.coord)
mfw <- rbind(mfw, i)
culling <- rbind(culling, j)
dataset <- rbind(dataset, list(xy.coord))
} }
library(stylo)
library(stats)
library(jsonlite)
library(stringr)
mfw <- c()
culling <- c()
dataset <- list()
for (i in seq(100, 300, by=100)){
for(j in seq(0, 50, by=10)){
data <- stylo(gui = FALSE,
distance.measure = "delta",
analysis.type  = "PCV",
analyzed.features = "w",
ngram.size = "1",
mfw.min= i,
mfw.max = i,
mfw.incr = 0,
culling.min = j,
culling.max = j,
culling.incr = 10,
delete.pronouns = FALSE,
preserve.case = FALSE,
sampling = "no.sampling",
sample.size = 10000,
number.of.samples = 1,
corpus.dir = "corpus",
write.pdf.file = "false")
pca.results = prcomp(data$table.with.all.freqs[,1:i], scale=TRUE)
expl.var = round(((pca.results$sdev^2) / sum(pca.results$sdev^2) * 100), 1)
PC1_lab = paste("PC1 (", expl.var[1], "%)", sep="")
PC2_lab = paste("PC2 (", expl.var[2], "%)", sep="")
xy.coord = pca.results$x[,1:2]
name <- rownames(data$table.with.all.freqs)
xy.coord <- cbind(xy.coord, name)
colnames(xy.coord) <- c("V1","V2","name")
xy.coord <- transform(xy.coord, V1 = as.numeric(V1))
xy.coord <- transform(xy.coord, V2 = as.numeric(V2))
xy.coord <- data.frame(xy.coord)
mfw <- rbind(mfw, i)
culling <- rbind(culling, j)
dataset <- rbind(dataset, list(xy.coord))
} }
View(data)
data$table.with.all.freqs
library(stylo)
library(stats)
library(jsonlite)
library(stringr)
mfw <- c()
culling <- c()
dataset <- list()
for (i in seq(100, 300, by=100)){
for(j in seq(0, 20, by=10)){
data <- stylo(gui = FALSE,
distance.measure = "delta",
analysis.type  = "PCV",
analyzed.features = "w",
ngram.size = "1",
mfw.min= i,
mfw.max = i,
mfw.incr = 0,
culling.min = j,
culling.max = j,
culling.incr = 10,
delete.pronouns = FALSE,
preserve.case = FALSE,
sampling = "no.sampling",
sample.size = 10000,
number.of.samples = 1,
corpus.dir = "corpus",
write.pdf.file = "false")
pca.results = prcomp(data$table.with.all.freqs[,1:i])
expl.var = round(((pca.results$sdev^2) / sum(pca.results$sdev^2) * 100), 1)
PC1_lab = paste("PC1 (", expl.var[1], "%)", sep="")
PC2_lab = paste("PC2 (", expl.var[2], "%)", sep="")
xy.coord = pca.results$x[,1:2]
name <- rownames(data$table.with.all.freqs)
xy.coord <- cbind(xy.coord, name)
colnames(xy.coord) <- c("V1","V2","name")
xy.coord <- transform(xy.coord, V1 = as.numeric(V1))
xy.coord <- transform(xy.coord, V2 = as.numeric(V2))
xy.coord <- data.frame(xy.coord)
mfw <- rbind(mfw, i)
culling <- rbind(culling, j)
dataset <- rbind(dataset, list(xy.coord))
} }
jsonData <- data.frame(mfw = mfw, culling = culling, data= dataset)
jsonTree <- toJSON(jsonData, pretty = TRUE, auto_unbox = TRUE)
write(jsonTree, file="result.json")
library(stylo)
library(stats)
library(jsonlite)
library(stringr)
library(tsne)
mfw <- c()
culling <- c()
dataset <- list()
for (i in seq({{100}}, {{300}}, by={{100}})){
for(j in seq({{0}}, {{20}}, by={{10}})){
data <- stylo(gui = FALSE,
distance.measure = "delta",
analysis.type  = "tSNE",
analyzed.features = "w",
ngram.size = "1",
mfw.min= i,
mfw.max = i,
mfw.incr = {{mfwIncr}},
culling.min = j,
culling.max = j,
culling.incr = {{cullIncr}},
delete.pronouns = {{deletePronouns}},
preserve.case = {{preserveCase}},
sampling = "{{sampling}}",
sample.size = {{sampleSize}},
number.of.samples = {{randomSample}},
corpus.dir = "corpus",
write.pdf.file = "false")
ecb = function(x,y){
plot(x, t='n', main = "", xlab = "", ylab = "", yaxt = "n", xaxt = "n")
text(x, rownames(data$table.with.all.freqs[,1:i]), cex = 0.3)
}
tsneData <- tsne(X = data$table.with.all.freqs[,1:i], initial_dims = 50, epoch_callback = ecb, perplexity = 50, max_iter = 2000)
tsneData <- data.frame(tsneData)
name <- rownames(data$table.with.all.freqs)
tsneData <- cbind(tsneData, name)
colnames(tsneData) <- c("V1","V2","name")
mfw <- rbind(mfw, i)
culling <- rbind(culling, j)
dataset <- rbind(dataset, list(tsneData))
} }
library(stylo)
library(stats)
library(jsonlite)
library(stringr)
library(tsne)
mfw <- c()
culling <- c()
dataset <- list()
for (i in seq({{100}}, {{300}}, by={{100}})){
for(j in seq({{0}}, {{20}}, by={{10}})){
data <- stylo(gui = FALSE,
distance.measure = "delta",
analysis.type  = "tSNE",
analyzed.features = "w",
ngram.size = "1",
mfw.min= i,
mfw.max = i,
mfw.incr = 100,
culling.min = j,
culling.max = j,
culling.incr = 10,
corpus.dir = "corpus",
write.pdf.file = "false")
ecb = function(x,y){
plot(x, t='n', main = "", xlab = "", ylab = "", yaxt = "n", xaxt = "n")
text(x, rownames(data$table.with.all.freqs[,1:i]), cex = 0.3)
}
tsneData <- tsne(X = data$table.with.all.freqs[,1:i], initial_dims = 50, epoch_callback = ecb, perplexity = 50, max_iter = 2000)
tsneData <- data.frame(tsneData)
name <- rownames(data$table.with.all.freqs)
tsneData <- cbind(tsneData, name)
colnames(tsneData) <- c("V1","V2","name")
mfw <- rbind(mfw, i)
culling <- rbind(culling, j)
dataset <- rbind(dataset, list(tsneData))
} }
jsonData <- data.frame(mfw = mfw, culling = culling, data= dataset)
jsonTree <- toJSON(jsonData, pretty = TRUE)
write(jsonTree, file="result.json")
View(jsonData)
jsonData
jsonTree
library(stylo)
library(stylo)
library(stylo)
library(stylo)
library(stylo)
library(stats)
library(jsonlite)
library(stringr)
library(tsne)
mfw <- c()
culling <- c()
dataset <- list()
for (i in seq({{100}}, {{300}}, by={{100}})){
for(j in seq({{0}}, {{20}}, by={{10}})){
data <- stylo(gui = FALSE,
distance.measure = "delta",
analysis.type  = "tSNE",
analyzed.features = "w",
ngram.size = "1",
mfw.min= i,
mfw.max = i,
mfw.incr = 100,
culling.min = j,
culling.max = j,
culling.incr = 10,
corpus.dir = "corpus",
write.pdf.file = "false"
save.distance.table = "true")
library(stylo)
library(stats)
library(jsonlite)
library(stringr)
library(tsne)
mfw <- c()
culling <- c()
dataset <- list()
for (i in seq({{100}}, {{300}}, by={{100}})){
for(j in seq({{0}}, {{20}}, by={{10}})){
data <- stylo(gui = FALSE,
distance.measure = "delta",
analysis.type  = "tSNE",
analyzed.features = "w",
ngram.size = "1",
mfw.min= i,
mfw.max = i,
mfw.incr = 100,
culling.min = j,
culling.max = j,
culling.incr = 10,
corpus.dir = "corpus",
write.pdf.file = "false"
save.distance.tables = "true")
library(stylo)
library(stats)
library(jsonlite)
library(stringr)
library(tsne)
mfw <- c()
culling <- c()
dataset <- list()
for (i in seq({{100}}, {{300}}, by={{100}})){
for(j in seq({{0}}, {{20}}, by={{10}})){
data <- stylo(gui = FALSE,
distance.measure = "delta",
analysis.type  = "tSNE",
analyzed.features = "w",
ngram.size = "1",
mfw.min= i,
mfw.max = i,
mfw.incr = 100,
culling.min = j,
culling.max = j,
culling.incr = 10,
corpus.dir = "corpus",
write.pdf.file = "false",
save.distance.tables = "true")
ecb = function(x,y){
text(x, rownames(data$table.with.all.freqs[,1:i]), cex = 0.3)
}
tsneData <- tsne(X = data$table.with.all.freqs[,1:i], initial_dims = 50, epoch_callback = ecb, perplexity = 50, max_iter = 2000)
tsneData <- data.frame(tsneData)
name <- rownames(data$table.with.all.freqs)
tsneData <- cbind(tsneData, name)
colnames(tsneData) <- c("V1","V2","name")
mfw <- rbind(mfw, i)
culling <- rbind(culling, j)
dataset <- rbind(dataset, list(tsneData))
} }
library(stylo)
library(stats)
library(jsonlite)
library(stringr)
mfw <- c()
culling <- c()
dataset <- list()
for (i in seq(100, 200, by=100)){
for(j in seq(0, 0, by=10)){
data <- stylo(gui = FALSE,
distance.measure = "delta",
analysis.type  = "PCV",
analyzed.features = "w",
ngram.size = "1",
mfw.min= i,
mfw.max = i,
mfw.incr = 0,
culling.min = j,
culling.max = j,
culling.incr = 10,
delete.pronouns = FALSE,
preserve.case = FALSE,
sampling = "no.sampling",
sample.size = 10000,
number.of.samples = 1,
corpus.dir = "corpus",
write.pdf.file = "false",
save.distance.tables = "true")
pca.results = prcomp(data$table.with.all.freqs[,1:i])
expl.var = round(((pca.results$sdev^2) / sum(pca.results$sdev^2) * 100), 1)
PC1_lab = paste("PC1 (", expl.var[1], "%)", sep="")
PC2_lab = paste("PC2 (", expl.var[2], "%)", sep="")
xy.coord = pca.results$x[,1:2]
name <- rownames(data$table.with.all.freqs)
xy.coord <- cbind(xy.coord, name)
colnames(xy.coord) <- c("V1","V2","name")
xy.coord <- transform(xy.coord, V1 = as.numeric(V1))
xy.coord <- transform(xy.coord, V2 = as.numeric(V2))
xy.coord <- data.frame(xy.coord)
mfw <- rbind(mfw, i)
culling <- rbind(culling, j)
dataset <- rbind(dataset, list(xy.coord))
} }
jsonData <- data.frame(mfw = mfw, culling = culling, data= dataset)
jsonTree <- toJSON(jsonData, pretty = TRUE, auto_unbox = TRUE)
write(jsonTree, file="result.json")
library(stylo)
library(stats)
library(jsonlite)
library(stringr)
mfw <- c()
culling <- c()
dataset <- list()
for (i in seq(100, 200, by=100)){
for(j in seq(0, 0, by=10)){
data <- stylo(gui = FALSE,
distance.measure = "delta",
analysis.type  = "PCV",
analyzed.features = "w",
ngram.size = "1",
mfw.min= i,
mfw.max = i,
mfw.incr = 0,
culling.min = j,
culling.max = j,
culling.incr = 10,
delete.pronouns = FALSE,
preserve.case = FALSE,
sampling = "no.sampling",
sample.size = 10000,
number.of.samples = 1,
corpus.dir = "corpus",
write.pdf.file = "false",
save.distance.tables = TRUE)
pca.results = prcomp(data$table.with.all.freqs[,1:i])
expl.var = round(((pca.results$sdev^2) / sum(pca.results$sdev^2) * 100), 1)
PC1_lab = paste("PC1 (", expl.var[1], "%)", sep="")
PC2_lab = paste("PC2 (", expl.var[2], "%)", sep="")
xy.coord = pca.results$x[,1:2]
name <- rownames(data$table.with.all.freqs)
xy.coord <- cbind(xy.coord, name)
colnames(xy.coord) <- c("V1","V2","name")
xy.coord <- transform(xy.coord, V1 = as.numeric(V1))
xy.coord <- transform(xy.coord, V2 = as.numeric(V2))
xy.coord <- data.frame(xy.coord)
mfw <- rbind(mfw, i)
culling <- rbind(culling, j)
dataset <- rbind(dataset, list(xy.coord))
} }
jsonData <- data.frame(mfw = mfw, culling = culling, data= dataset)
jsonTree <- toJSON(jsonData, pretty = TRUE, auto_unbox = TRUE)
write(jsonTree, file="result.json")
data <- stylo(gui = FALSE,
distance.measure = "delta",
analysis.type  = "PCV",
analyzed.features = "w",
ngram.size = "1",
mfw.min= i,
mfw.max = i,
mfw.incr = 0,
culling.min = j,
culling.max = j,
culling.incr = 10,
delete.pronouns = FALSE,
preserve.case = FALSE,
sampling = "no.sampling",
sample.size = 10000,
number.of.samples = 1,
corpus.dir = "corpus",
write.pdf.file = "false",
save.distance.tables = TRUE)
stylo()
